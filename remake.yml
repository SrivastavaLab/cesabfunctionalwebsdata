## a remake file to automate the process of assembling the dataset
## edited by Andrew in September 2016

## first, list all the packages required
packages:
  - dplyr
  - tidyr
  - purrr
  - bwgdata
  - stringr
  - assertr
  - lubridate
  - rmarkdown
  - knitr
  - ggplot2
  - broom
  - readr
  - modelr
  - ggmap
  - viridis
  - rmarkdown
  - assertthat
  - lazyeval
  - assertr

sources:
  #- Rfunctions
  - Rfunctions/01_accessing_cleaning.R
  - Rfunctions/02_detritus_subdividing_error_correction.R
  - Rfunctions/03_detritus_interpolation.R
  - Rfunctions/99_mapping_checking.R
  - Rfunctions/find_symbols.R
  - Rfunctions/03_detritus_equations.R

targets:
  downloads:
    depends:
      - dats
      - visits
      - broms
      - trts_all
      - abds

  all:
    depends:
      - trts_all_filtered
      - abundance
      - detritus_wider
      - detritus_estimated_with_equation
      #- reports
#  downloads:
#      -
## or should i give the original downloads a "clean" step, so that I could just delete them all and remake it again?

  ## obtain all the data

  dats:
    command: bwg_get(I("datasets"))

  visits:
    command: bwg_get(I("visits"))

  broms:
    command: bwg_get(I("bromeliads"))


## get every single abundance table (sensible datasets only)
  abds:
    command: get_all_abundances(dats_filtered)

## specify trait arguments
  getargs:
    command: list(tachet = I("true"), traits = I("true"))

  trts_all:
    command: bwg_get(I("species"), getargs)

## restructuring datasets

  broms_rename_unnest:
    command: no_attrib_unnest_det(broms)

  trts_all_filtered:
    command: combine_multi_names(trts_all)

  abundance:
    command: tidy_dataset_list(abds)
    ## function is from bwgdata

### load in supplementary data

  fpom_fg_data:
    command: read_fpom_fg("data-raw/FPOMdecanted_dryweight.csv")


## remove useless test datasets.
  blacklist:
    command: make_blacklist(visits, dats)

  dats_filtered:
    command: anti_join(dats, blacklist)

  visits_filtered:
    command: anti_join(visits, blacklist)

  abundance_filtered:
    command: anti_join(abundance, blacklist)

  brom_rename_unnest_filtered:
    command: anti_join(broms_rename_unnest, blacklist)

## coercing values if necessary

  abundance_values:
    command: coerce_values_abundance(abundance_filtered)

  trts_all_values:
    command: coerce_values_trts_all_filtered(trts_all_filtered)

  visits_values:
    command: coerce_values_visits(visits_filtered)

  visits_date:
    command: coerce_visits_date(visits_values)

  dats_values:
    command: coerce_values_dats(dats_filtered)

  dats_date:
    command: coerce_dats_date(dats_values)

  ## drop a bad column name
  brom_clean_name:
    command: drop_bad_name(brom_rename_unnest_filtered)

  broms_values:
    command: coerce_values_brom_r_u(brom_clean_name)

  broms_date:
    command: coerce_broms_date(broms_values)

## summarizing datasets

  visitnames:
    command: make_visitnames(visits_date, dats_date)
    ## dats_filtered is here to work in a semi-join.

  datasetnames:
    command: make_datasetnames(visitnames)

  diam_brom:
    command: make_diam_brom(broms_date)

  fpom_brom:
    command: make_fpom_brom(broms_date)

  detritus_wide:
    command: make_detritus_wide(broms_date)

  detritus_wider:
    command: make_detritus_wider(broms_date, detritus_wide, visitnames, diam_brom, fpom_brom)

  ## correcting erroneous measurements in Cardoso -- moving some values to the right

  detritus_wider_cardoso_corrected:
    command: correct_cardoso_detritus_wider(detritus_wider)

  ## correcting erroneous measurements in french Guiana -- mislabelled columns
  detritus_wider_correct_frenchguiana:
    command: correct_frenchguiana_detritus(detritus_wider_cardoso_corrected)

  # inferring FPOM mass from FPOM volume

  ## First step: create model

  model_fpom_g_ml:
    command: fit_fpom_g_ml(fpom_fg_data)

  ## then use both model and data to create the new predictions
  detritus_wider_FG_g:
    command: estimate_fpom_g_from_ml(detritus_wider_correct_frenchguiana, model_fpom_g_ml)

  ## in a separate step, extract the model predictions into a column
  detritus_wider_fpom_g_predicted:
    command: predict_fpom_g(detritus_wider_FG_g)

  ## combine the observed and predicted values (keep se column)
  detritus_wider_0_150_added:
    command: combine_observed_predicted_0_150_det(detritus_wider_correct_frenchguiana, detritus_wider_fpom_g_predicted)

# estimating missing detritus with equations ----------------------------------

  equation_table:
    command: create_equation_table()

  equation_plots:
    command: plot_data_with_equation_table(equation_table, .detritus_data = detritus_wider_0_150_added)

  detritus_estimate_equation_filt:
    command: do_filter_dataset_id(equation_table, .detritus_data = detritus_wider_0_150_added)

  detritus_estimated_with_equation:
    command: do_mutate_new_col(detritus_estimate_equation_filt)

 # Detritus_missing.html:
#    command: render("Detritus_missing.Rmd")
#    depends:
#      - detritus_wider_FG_detritus_corrected

  # get a pretty map

#  stamenmap:
#    command: get_map_SA()


#include:
#- remake_sites.yml


